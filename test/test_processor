#!/usr/bin/env bash
source $(dirname $0)/functions.sh
imdb_id="tt0000000"

function oneTimeSetUp() {
  sample_file="$(dirname $0)/mp4/sample.mp4"
  sample_custom_poster="$(dirname $0)/mp4/sample_custom_poster.jpg"
  sample_src="https://web.archive.org/web/http://www.sample-videos.com/video/mp4/720/big_buck_bunny_720p_1mb.mp4"
  [[ -f $(dirname $0)/mp4/sample.mp4 ]] || wget ${sample_src} -O ${sample_file}
  aws s3 rm s3://${MOVIES_BUCKET}/${imdb_id}/ffprobe.txt
  aws s3 rm s3://${MOVIES_BUCKET}/${imdb_id}/kodi.nfo
  aws s3 rm s3://${MOVIES_BUCKET}/${imdb_id}/kodi.strm
  aws s3 rm s3://${MOVIES_BUCKET}/${imdb_id}/omdb.json
  aws s3 rm s3://${MOVIES_BUCKET}/${imdb_id}/poster.jpg
  aws s3 rm s3://${MOVIES_BUCKET}/${imdb_id}/poster-custom.jpg
  aws s3 cp ${sample_file} s3://${MOVIES_BUCKET}/${imdb_id}/video.mp4
  echo "Waiting for Lambda's to fire"
  sleep 5
}

function test_ffprobe() {
  assertEquals "width" "1280" "$(ffprobe ${imdb_id} | awk -F= '/^width/ { print $2 }')"
  assertEquals "height" "720" "$(ffprobe ${imdb_id} | awk -F= '/^height/ { print $2 }')"
}

function test_omdb() {
  assertEquals "title"   "Carmencita"   "$(omdb ${imdb_id}| jq .Title -r)"
  assertEquals "year"    "1894"         "$(omdb ${imdb_id}| jq .Year -r)"
}

function test_kodi_strm() {
  assertTrue 'is https'     "kodi_strm ${imdb_id} | grep ^https"
  assertTrue 'has id'       "kodi_strm ${imdb_id} | grep tt0000000"
  assertTrue 'has key'      "kodi_strm ${imdb_id} | grep User-Agent=.*$"
}

function test_poster() {
  meta="/dev/stdin: JPEG image data, JFIF standard 1.01, resolution (DPI), density 96x96, segment length 16, baseline, precision 8, 326x475, frames 3"
  assertEquals 'is jpeg' "${meta}"  "$(poster ${imdb_id} | file -)"
}

function test_kodi_nfo() {
  content="$(kodi_nfo ${imdb_id})"
  assertTrue 'has id'        'echo "${content}" | grep "<id>tt0000000</id>"'
  assertTrue 'has year'      'echo "${content}" | grep "<year>1894</year>"'
  assertTrue 'has runtime'   'echo "${content}" | grep "<runtime>1 min</runtime>"'
  assertTrue 'has thumb'     'echo "${content}" | grep "<thumb>http://s3-ap-southeast-2.amazonaws.com/s3strm-movies/tt0000000/poster.jpg</thumb>"'
  assertTrue 'has rating'    'echo "${content}" | grep "<rating>5.9</rating>"'
  assertTrue 'has genre'     'echo "${content}" | grep "<genre>Documentary</genre><genre>Short</genre>"'
  assertTrue 'has director'  'echo "${content}" | grep "<director>William K.L. Dickson</director>"'
  assertTrue 'has actor'     'echo "${content}" | grep "<actor><name>Carmencita</name></actor>"'
  assertTrue 'has width'     'echo "${content}" | grep "<width>1280</width>"'
  assertTrue 'has height'    'echo "${content}" | grep "<height>720</height>"'
  assertTrue 'has duration'  'echo "${content}" | grep "<duration>0</duration>"'
}

function test_kodi_nfo_custom_image() {
  aws s3 cp ${sample_custom_poster} s3://${MOVIES_BUCKET}/${imdb_id}/poster-custom.jpg
  aws s3 cp ${sample_file} s3://${MOVIES_BUCKET}/${imdb_id}/video.mp4
  sleep 5
  content="$(kodi_nfo ${imdb_id})"
  assertTrue 'has custom poster'     'echo "${content}" | grep "<thumb>http://s3-ap-southeast-2.amazonaws.com/s3strm-movies/tt0000000/poster-custom.jpg</thumb>"'
}

source $(dirname $0)/shunit/src/shunit2

# vim: ft=sh
